const n=JSON.parse('{"key":"v-fe188afe","path":"/my-blog/tools-code/code.html","title":"工具代码","lang":"zh-CN","frontmatter":{"title":"工具代码","category":["软件安装"],"author":"xiaobai","tag":["tools"],"date":"2023-03-29T00:00:00.000Z","isOriginal":"转载","description":"工具代码 👉 日常博客文章，编写工具代码 有些代码总数忘记怎么写，然后用的比较多，所以就记录下来。 👉 作者：小白 原文：https://blog.csdn.net/zhouqi1427/article/details/126061684 1. mybatis插件使用 import com.baomidou.mybatisplus.core.toolkit.PluginUtils; import com.baomidou.mybatisplus.extension.handlers.AbstractSqlParserHandler; import org.apache.ibatis.executor.statement.StatementHandler; import org.apache.ibatis.mapping.BoundSql; import org.apache.ibatis.mapping.MappedStatement; import org.apache.ibatis.mapping.SqlCommandType; import org.apache.ibatis.plugin.Interceptor; import org.apache.ibatis.plugin.Intercepts; import org.apache.ibatis.plugin.Invocation; import org.apache.ibatis.plugin.Signature; import org.apache.ibatis.reflection.MetaObject; import org.apache.ibatis.reflection.SystemMetaObject; import org.springframework.stereotype.Component; import java.sql.Connection; import java.util.Properties; @Intercepts({@Signature( type = StatementHandler.class, method = \\"prepare\\", args = {Connection.class, Integer.class} )}) @Component public class MyBatisPlusInterceptor extends AbstractSqlParserHandler implements Interceptor { @Override public Object intercept(Invocation invocation) throws Throwable { StatementHandler statementHandler = PluginUtils.realTarget(invocation.getTarget()); MetaObject metaObject = SystemMetaObject.forObject(statementHandler); this.sqlParser(metaObject); MappedStatement mappedStatement = (MappedStatement) metaObject.getValue(\\"delegate.mappedStatement\\"); if(!SqlCommandType.SELECT.equals(mappedStatement.getSqlCommandType()) &amp;&amp; !SqlCommandType.DELETE.equals(mappedStatement.getSqlCommandType())) { return invocation.proceed(); } BoundSql boundSql = (BoundSql) metaObject.getValue(\\"delegate.boundSql\\"); // 执行的SQL语句 String sql = boundSql.getSql(); // 查询控制 if(SqlCommandType.SELECT.equals(mappedStatement.getSqlCommandType())) { if(!sql.toUpperCase().contains(\\"WHERE\\")) { throw new Exception(\\"缺少查询条件\\"); } } // 删除控制 if(SqlCommandType.DELETE.equals(mappedStatement.getSqlCommandType())) { if(!sql.toUpperCase().contains(\\"WHERE\\")) { throw new Exception(\\"缺少删除条件\\"); } } // SQL语句的参数 Object parameterObject = boundSql.getParameterObject(); // 重新设置SQL // metaObject.setValue(\\"delegate.boundSql.sql\\", sql); return invocation.proceed(); } /** * 生成拦截对象代理 * @param target * @return */ @Override public Object plugin(Object target) { return Interceptor.super.plugin(target); } @Override public void setProperties(Properties properties) { Interceptor.super.setProperties(properties); } }","head":[["meta",{"property":"og:url","content":"https://javaguide.cn/my-blog/tools-code/code.html"}],["meta",{"property":"og:site_name","content":"JavaGuide(Java面试+学习指南)"}],["meta",{"property":"og:title","content":"工具代码"}],["meta",{"property":"og:description","content":"工具代码 👉 日常博客文章，编写工具代码 有些代码总数忘记怎么写，然后用的比较多，所以就记录下来。 👉 作者：小白 原文：https://blog.csdn.net/zhouqi1427/article/details/126061684 1. mybatis插件使用 import com.baomidou.mybatisplus.core.toolkit.PluginUtils; import com.baomidou.mybatisplus.extension.handlers.AbstractSqlParserHandler; import org.apache.ibatis.executor.statement.StatementHandler; import org.apache.ibatis.mapping.BoundSql; import org.apache.ibatis.mapping.MappedStatement; import org.apache.ibatis.mapping.SqlCommandType; import org.apache.ibatis.plugin.Interceptor; import org.apache.ibatis.plugin.Intercepts; import org.apache.ibatis.plugin.Invocation; import org.apache.ibatis.plugin.Signature; import org.apache.ibatis.reflection.MetaObject; import org.apache.ibatis.reflection.SystemMetaObject; import org.springframework.stereotype.Component; import java.sql.Connection; import java.util.Properties; @Intercepts({@Signature( type = StatementHandler.class, method = \\"prepare\\", args = {Connection.class, Integer.class} )}) @Component public class MyBatisPlusInterceptor extends AbstractSqlParserHandler implements Interceptor { @Override public Object intercept(Invocation invocation) throws Throwable { StatementHandler statementHandler = PluginUtils.realTarget(invocation.getTarget()); MetaObject metaObject = SystemMetaObject.forObject(statementHandler); this.sqlParser(metaObject); MappedStatement mappedStatement = (MappedStatement) metaObject.getValue(\\"delegate.mappedStatement\\"); if(!SqlCommandType.SELECT.equals(mappedStatement.getSqlCommandType()) &amp;&amp; !SqlCommandType.DELETE.equals(mappedStatement.getSqlCommandType())) { return invocation.proceed(); } BoundSql boundSql = (BoundSql) metaObject.getValue(\\"delegate.boundSql\\"); // 执行的SQL语句 String sql = boundSql.getSql(); // 查询控制 if(SqlCommandType.SELECT.equals(mappedStatement.getSqlCommandType())) { if(!sql.toUpperCase().contains(\\"WHERE\\")) { throw new Exception(\\"缺少查询条件\\"); } } // 删除控制 if(SqlCommandType.DELETE.equals(mappedStatement.getSqlCommandType())) { if(!sql.toUpperCase().contains(\\"WHERE\\")) { throw new Exception(\\"缺少删除条件\\"); } } // SQL语句的参数 Object parameterObject = boundSql.getParameterObject(); // 重新设置SQL // metaObject.setValue(\\"delegate.boundSql.sql\\", sql); return invocation.proceed(); } /** * 生成拦截对象代理 * @param target * @return */ @Override public Object plugin(Object target) { return Interceptor.super.plugin(target); } @Override public void setProperties(Properties properties) { Interceptor.super.setProperties(properties); } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"xiaobai"}],["meta",{"property":"article:tag","content":"tools"}],["meta",{"property":"article:published_time","content":"2023-03-29T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"工具代码\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-29T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xiaobai\\"}]}"]]},"headers":[{"level":3,"title":"1. mybatis插件使用","slug":"_1-mybatis插件使用","link":"#_1-mybatis插件使用","children":[]},{"level":3,"title":"2.请求转发参数传递","slug":"_2-请求转发参数传递","link":"#_2-请求转发参数传递","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":2.48,"words":744},"filePathRelative":"my-blog/tools-code/code.md","localizedDate":"2023年3月29日","excerpt":"<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">工具代码</p>\\n<p>👉 日常博客文章，编写工具代码\\n有些代码总数忘记怎么写，然后用的比较多，所以就记录下来。</p>\\n<p>👉 作者：小白</p>\\n</div>\\n<blockquote>\\n<p>原文：https://blog.csdn.net/zhouqi1427/article/details/126061684</p>\\n</blockquote>\\n<h3> 1. mybatis插件使用</h3>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">com<span class=\\"token punctuation\\">.</span>baomidou<span class=\\"token punctuation\\">.</span>mybatisplus<span class=\\"token punctuation\\">.</span>core<span class=\\"token punctuation\\">.</span>toolkit<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">PluginUtils</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">com<span class=\\"token punctuation\\">.</span>baomidou<span class=\\"token punctuation\\">.</span>mybatisplus<span class=\\"token punctuation\\">.</span>extension<span class=\\"token punctuation\\">.</span>handlers<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">AbstractSqlParserHandler</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>apache<span class=\\"token punctuation\\">.</span>ibatis<span class=\\"token punctuation\\">.</span>executor<span class=\\"token punctuation\\">.</span>statement<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">StatementHandler</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>apache<span class=\\"token punctuation\\">.</span>ibatis<span class=\\"token punctuation\\">.</span>mapping<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">BoundSql</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>apache<span class=\\"token punctuation\\">.</span>ibatis<span class=\\"token punctuation\\">.</span>mapping<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">MappedStatement</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>apache<span class=\\"token punctuation\\">.</span>ibatis<span class=\\"token punctuation\\">.</span>mapping<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">SqlCommandType</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>apache<span class=\\"token punctuation\\">.</span>ibatis<span class=\\"token punctuation\\">.</span>plugin<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">Interceptor</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>apache<span class=\\"token punctuation\\">.</span>ibatis<span class=\\"token punctuation\\">.</span>plugin<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">Intercepts</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>apache<span class=\\"token punctuation\\">.</span>ibatis<span class=\\"token punctuation\\">.</span>plugin<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">Invocation</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>apache<span class=\\"token punctuation\\">.</span>ibatis<span class=\\"token punctuation\\">.</span>plugin<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">Signature</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>apache<span class=\\"token punctuation\\">.</span>ibatis<span class=\\"token punctuation\\">.</span>reflection<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">MetaObject</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>apache<span class=\\"token punctuation\\">.</span>ibatis<span class=\\"token punctuation\\">.</span>reflection<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">SystemMetaObject</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>springframework<span class=\\"token punctuation\\">.</span>stereotype<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">Component</span></span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">java<span class=\\"token punctuation\\">.</span>sql<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">Connection</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">java<span class=\\"token punctuation\\">.</span>util<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">Properties</span></span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token annotation punctuation\\">@Intercepts</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span><span class=\\"token annotation punctuation\\">@Signature</span><span class=\\"token punctuation\\">(</span>\\n        type <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">StatementHandler</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">,</span>\\n        method <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"prepare\\"</span><span class=\\"token punctuation\\">,</span>\\n        args <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token class-name\\">Connection</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">Integer</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token annotation punctuation\\">@Component</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">MyBatisPlusInterceptor</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">AbstractSqlParserHandler</span> <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">Interceptor</span> <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Object</span> <span class=\\"token function\\">intercept</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Invocation</span> invocation<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">throws</span> <span class=\\"token class-name\\">Throwable</span> <span class=\\"token punctuation\\">{</span>                        \\n        <span class=\\"token class-name\\">StatementHandler</span> statementHandler <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">PluginUtils</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">realTarget</span><span class=\\"token punctuation\\">(</span>invocation<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getTarget</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">MetaObject</span> metaObject <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">SystemMetaObject</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forObject</span><span class=\\"token punctuation\\">(</span>statementHandler<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">sqlParser</span><span class=\\"token punctuation\\">(</span>metaObject<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">MappedStatement</span> mappedStatement <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">MappedStatement</span><span class=\\"token punctuation\\">)</span> metaObject<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getValue</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"delegate.mappedStatement\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span><span class=\\"token class-name\\">SqlCommandType</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">SELECT</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">equals</span><span class=\\"token punctuation\\">(</span>mappedStatement<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getSqlCommandType</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token operator\\">!</span><span class=\\"token class-name\\">SqlCommandType</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">DELETE</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">equals</span><span class=\\"token punctuation\\">(</span>mappedStatement<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getSqlCommandType</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">return</span> invocation<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">proceed</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n\\n        <span class=\\"token class-name\\">BoundSql</span> boundSql <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">BoundSql</span><span class=\\"token punctuation\\">)</span> metaObject<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getValue</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"delegate.boundSql\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 执行的SQL语句</span>\\n        <span class=\\"token class-name\\">String</span> sql <span class=\\"token operator\\">=</span> boundSql<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getSql</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token comment\\">// 查询控制</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">SqlCommandType</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">SELECT</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">equals</span><span class=\\"token punctuation\\">(</span>mappedStatement<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getSqlCommandType</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>sql<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toUpperCase</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">contains</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"WHERE\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token keyword\\">throw</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Exception</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"缺少查询条件\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span>\\n\\n        <span class=\\"token comment\\">// 删除控制</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">SqlCommandType</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">DELETE</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">equals</span><span class=\\"token punctuation\\">(</span>mappedStatement<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getSqlCommandType</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>sql<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toUpperCase</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">contains</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"WHERE\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token keyword\\">throw</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Exception</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"缺少删除条件\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span>\\n\\n        <span class=\\"token comment\\">// SQL语句的参数</span>\\n        <span class=\\"token class-name\\">Object</span> parameterObject <span class=\\"token operator\\">=</span> boundSql<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getParameterObject</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token comment\\">// 重新设置SQL</span>\\n<span class=\\"token comment\\">//        metaObject.setValue(\\"delegate.boundSql.sql\\", sql);</span>\\n\\n        <span class=\\"token keyword\\">return</span> invocation<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">proceed</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 生成拦截对象代理\\n     * <span class=\\"token keyword\\">@param</span> <span class=\\"token parameter\\">target</span>\\n     * <span class=\\"token keyword\\">@return</span>\\n     */</span>\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Object</span> <span class=\\"token function\\">plugin</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Object</span> target<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token class-name\\">Interceptor</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">super</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">plugin</span><span class=\\"token punctuation\\">(</span>target<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">setProperties</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Properties</span> properties<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">Interceptor</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">super</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setProperties</span><span class=\\"token punctuation\\">(</span>properties<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"xiaobai"},"autoDesc":true}');export{n as data};
