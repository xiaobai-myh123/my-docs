const e=JSON.parse('{"key":"v-dff0fe32","path":"/distributed-system/distributed-lock.html","title":"分布式锁详解","lang":"zh-CN","frontmatter":{"title":"分布式锁详解","category":["分布式"],"icon":"lock","description":"网上有很多分布式锁相关的文章，写了一个相对简洁易懂的版本，针对面试和工作应该够用了。 什么是分布式锁？ 对于单机多线程来说，在 Java 中，我们通常使用 ReetrantLock 类、synchronized 关键字这类 JDK 自带的 本地锁 来控制一个 JVM 进程内的多个线程对本地共享资源的访问。 下面是我对本地锁画的一张示意图。 从图中可以看出，这些线程访问共享资源是互斥的，同一时刻只有一个线程可以获取到本地锁访问共享资源。","head":[["meta",{"property":"og:url","content":"https://javaguide.cn/distributed-system/distributed-lock.html"}],["meta",{"property":"og:site_name","content":"JavaGuide(Java面试+学习指南)"}],["meta",{"property":"og:title","content":"分布式锁详解"}],["meta",{"property":"og:description","content":"网上有很多分布式锁相关的文章，写了一个相对简洁易懂的版本，针对面试和工作应该够用了。 什么是分布式锁？ 对于单机多线程来说，在 Java 中，我们通常使用 ReetrantLock 类、synchronized 关键字这类 JDK 自带的 本地锁 来控制一个 JVM 进程内的多个线程对本地共享资源的访问。 下面是我对本地锁画的一张示意图。 从图中可以看出，这些线程访问共享资源是互斥的，同一时刻只有一个线程可以获取到本地锁访问共享资源。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://javaguide.cn/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"分布式锁详解"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"分布式锁详解\\",\\"image\\":[\\"https://javaguide.cn/\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"什么是分布式锁？","slug":"什么是分布式锁","link":"#什么是分布式锁","children":[]},{"level":2,"title":"基于 Redis 实现分布式锁","slug":"基于-redis-实现分布式锁","link":"#基于-redis-实现分布式锁","children":[{"level":3,"title":"如何基于 Redis 实现一个最简易的分布式锁？","slug":"如何基于-redis-实现一个最简易的分布式锁","link":"#如何基于-redis-实现一个最简易的分布式锁","children":[]},{"level":3,"title":"为什么要给锁设置一个过期时间？","slug":"为什么要给锁设置一个过期时间","link":"#为什么要给锁设置一个过期时间","children":[]},{"level":3,"title":"如何实现锁的优雅续期？","slug":"如何实现锁的优雅续期","link":"#如何实现锁的优雅续期","children":[]},{"level":3,"title":"Redis 如何解决集群情况下分布式锁的可靠性？","slug":"redis-如何解决集群情况下分布式锁的可靠性","link":"#redis-如何解决集群情况下分布式锁的可靠性","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":9.15,"words":2746},"filePathRelative":"distributed-system/distributed-lock.md","excerpt":"<p>网上有很多分布式锁相关的文章，写了一个相对简洁易懂的版本，针对面试和工作应该够用了。</p>\\n<h2> 什么是分布式锁？</h2>\\n<p>对于单机多线程来说，在 Java 中，我们通常使用 <code>ReetrantLock</code> 类、<code>synchronized</code> 关键字这类 JDK 自带的 <strong>本地锁</strong> 来控制一个 JVM 进程内的多个线程对本地共享资源的访问。</p>\\n<p>下面是我对本地锁画的一张示意图。</p>\\n<p></p>\\n<p>从图中可以看出，这些线程访问共享资源是互斥的，同一时刻只有一个线程可以获取到本地锁访问共享资源。</p>","copyright":{},"autoDesc":true}');export{e as data};
