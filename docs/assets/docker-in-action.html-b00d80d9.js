const e=JSON.parse('{"key":"v-3a522e74","path":"/tools/docker/docker-in-action.html","title":"Docker从入门到上手干事","lang":"zh-CN","frontmatter":{"title":"Docker从入门到上手干事","category":["开发工具"],"tag":["Docker"],"description":"Docker介绍 什么是 Docker？ 说实话关于 Docker 是什么并不太好说，下面我通过四点向你说明 Docker 到底是个什么东西。 Docker 是世界领先的软件容器平台，基于 Go 语言 进行开发实现。 Docker 能够自动执行重复性任务，例如搭建和配置开发环境，从而解放开发人员。 用户可以方便地创建和使用容器，把自己的应用放入容器。容器还可以进行版本管理、复制、分享、修改，就像管理普通的代码一样。 Docker 可以对进程进行封装隔离，属于操作系统层面的虚拟化技术。 由于隔离的进程独立于宿主和其它的隔离的进程，因此也称其为容器。","head":[["meta",{"property":"og:url","content":"https://javaguide.cn/tools/docker/docker-in-action.html"}],["meta",{"property":"og:site_name","content":"JavaGuide(Java面试+学习指南)"}],["meta",{"property":"og:title","content":"Docker从入门到上手干事"}],["meta",{"property":"og:description","content":"Docker介绍 什么是 Docker？ 说实话关于 Docker 是什么并不太好说，下面我通过四点向你说明 Docker 到底是个什么东西。 Docker 是世界领先的软件容器平台，基于 Go 语言 进行开发实现。 Docker 能够自动执行重复性任务，例如搭建和配置开发环境，从而解放开发人员。 用户可以方便地创建和使用容器，把自己的应用放入容器。容器还可以进行版本管理、复制、分享、修改，就像管理普通的代码一样。 Docker 可以对进程进行封装隔离，属于操作系统层面的虚拟化技术。 由于隔离的进程独立于宿主和其它的隔离的进程，因此也称其为容器。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"Docker"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker从入门到上手干事\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Docker介绍","slug":"docker介绍","link":"#docker介绍","children":[{"level":3,"title":"什么是 Docker？","slug":"什么是-docker","link":"#什么是-docker","children":[]},{"level":3,"title":"为什么要用 Docker?","slug":"为什么要用-docker","link":"#为什么要用-docker","children":[]}]},{"level":2,"title":"Docker 的安装","slug":"docker-的安装","link":"#docker-的安装","children":[{"level":3,"title":"Windows","slug":"windows","link":"#windows","children":[]},{"level":3,"title":"Mac","slug":"mac","link":"#mac","children":[]},{"level":3,"title":"Linux","slug":"linux","link":"#linux","children":[]}]},{"level":2,"title":"Docker 中的几个概念","slug":"docker-中的几个概念","link":"#docker-中的几个概念","children":[{"level":3,"title":"镜像","slug":"镜像","link":"#镜像","children":[]},{"level":3,"title":"容器","slug":"容器","link":"#容器","children":[]},{"level":3,"title":"仓库","slug":"仓库","link":"#仓库","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}]},{"level":2,"title":"Docker 初体验","slug":"docker-初体验","link":"#docker-初体验","children":[]},{"level":2,"title":"Docker 镜像指令","slug":"docker-镜像指令","link":"#docker-镜像指令","children":[]},{"level":2,"title":"Docker 容器指令","slug":"docker-容器指令","link":"#docker-容器指令","children":[]},{"level":2,"title":"Docker 数据卷","slug":"docker-数据卷","link":"#docker-数据卷","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":16.75,"words":5025},"filePathRelative":"tools/docker/docker-in-action.md","excerpt":"<h2> Docker介绍</h2>\\n<h3> 什么是 Docker？</h3>\\n<p>说实话关于 Docker 是什么并不太好说，下面我通过四点向你说明 Docker 到底是个什么东西。</p>\\n<ul>\\n<li>Docker 是世界领先的软件容器平台，基于 <strong>Go 语言</strong> 进行开发实现。</li>\\n<li>Docker 能够自动执行重复性任务，例如搭建和配置开发环境，从而解放开发人员。</li>\\n<li>用户可以方便地创建和使用容器，把自己的应用放入容器。容器还可以进行版本管理、复制、分享、修改，就像管理普通的代码一样。</li>\\n<li>Docker 可以<strong>对进程进行封装隔离，属于操作系统层面的虚拟化技术。</strong> 由于隔离的进程独立于宿主和其它的隔离的进程，因此也称其为容器。</li>\\n</ul>","copyright":{},"autoDesc":true}');export{e as data};
