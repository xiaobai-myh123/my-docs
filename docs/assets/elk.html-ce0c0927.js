import{_ as p,W as o,X as c,Y as n,Z as s,$ as t,a1 as a,F as l}from"./framework-b5ed7090.js";const i={},r=a('<div class="hint-container tip"><p class="hint-container-title">安装基础软件</p><p>👉 日常博客文章，编写elk 若依网址来的</p><p>👉 作者：小白</p></div><h2 id="基本介绍" tabindex="-1"><a class="header-anchor" href="#基本介绍" aria-hidden="true">#</a> 基本介绍</h2><ul><li>什么是分布式日志</li></ul><p>在分布式应用中，日志被分散在储存不同的设备上。如果你管理数十上百台服务器，你还在使用依次登录每台机器的传统方法查阅日志。这样是不是感觉很繁琐和效率低下。所以我们使用集中化的日志管理，分布式日志就是对大规模日志数据进行采集、追踪、处理。</p><ul><li>为什么要使用分布式日志</li></ul><p>一般我们需要进行日志分析场景：直接在日志文件中<code>grep</code>、<code>awk</code>就可以获得自己想要的信息。但在规模较大的场景中，此方法效率低下，面临问题包括日志量太大如何归档、文本搜索太慢怎么办、如何多维度查询。需要集中化的日志管理，所有服务器上的日志收集汇总。常见解决思路是建立集中式日志收集系统，将所有节点上的日志统一收集，管理，访问。</p><ul><li>ELK 分布式日志</li></ul><p>实际上<code>ELK</code>是三款软件的简称，分别是<code>Elasticsearch</code>、 <code>Logstash</code>、<code>Kibana</code>组成。</p><p><strong>Elasticsearch</strong> 基于<code>java</code>，是个开源分布式搜索引擎，它的特点有：分布式，零配置，自动发现，索引自动分片，索引副本机制，<code>restful</code>风格接口，多数据源，自动搜索负载等。</p><p><strong>Kibana</strong> 基于<code>nodejs</code>，也是一个开源和免费的工具，<code>Kibana</code>可以为<code>Logstash</code>和<code>ElasticSearch</code>提供的日志分析友好的Web 界面，可以汇总、分析和搜索重要数据日志。</p><p><strong>Logstash</strong> 基于<code>java</code>，是一个开源的用于收集,分析和存储日志的工具。</p><p>下面是<code>ELK</code>的工作原理： <img src="https://oscimg.oschina.net/oscnet/up-c62bd9299557f77a05d1a9c4ccd046f8fef.png" alt="elk"></p><h2 id="elasticsearch" tabindex="-1"><a class="header-anchor" href="#elasticsearch" aria-hidden="true">#</a> Elasticsearch</h2><h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3><p>ElasticSearch是一个基于Lucene的搜索服务器。它提供了一个分布式多用户能力的全文搜索引擎，基于RESTful web接口。Elasticsearch是用Java开发的，并作为Apache许可条款下的开放源码发布，是当前流行的企业级搜索引擎。设计用于云计算中，能够达到实时搜索，稳定，可靠，快速，安装使用方便。</p><p>我们建立一个网站或应用程序，并要添加搜索功能，但是想要完成搜索工作的创建是非常困难的。我们希望搜索解决方案要运行速度快，我们希望能有一个零配置和一个完全免费的搜索模式，我们希望能够简单地使用JSON通过HTTP来索引数据，我们希望我们的搜索服务器始终可用，我们希望能够从一台开始并扩展到数百台，我们要实时搜索，我们要简单的多租户，我们希望建立一个云的解决方案。因此我们利用Elasticsearch来解决所有这些问题及可能出现的更多其它问题。</p><p>ElasticSearch是Elastic Stack的核心，同时Elasticsearch 是一个分布式、RESTful风格的搜索和数据分析引擎，能够解决不断涌现出的各种用例。作为Elastic Stack的核心，它集中存储您的数据，帮助您发现意料之中以及意料之外的情况。</p><h3 id="下载" tabindex="-1"><a class="header-anchor" href="#下载" aria-hidden="true">#</a> 下载</h3>',18),d={href:"https://www.elastic.co/cn/downloads/elasticsearch",target:"_blank",rel:"noopener noreferrer"},u=n("img",{src:"https://oscimg.oschina.net/oscnet/up-d392963dafc68bc669d12ada72348dbf95b.png",alt:"Elasticsearch"},null,-1),k=a(`<h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3><ul><li>解压到相应目录</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> elasticsearch-7.10.2-linux-x86_64.tar.gz <span class="token parameter variable">-C</span> /usr/local
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>修改配置</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/elasticsearch-7.10.2/config/
<span class="token function">vim</span> elasticsearch.yml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>node.name: node-1
path.data: /usr/local/elasticsearch-7.10.2/data
path.logs: /usr/local/elasticsearch-7.10.2/logs
network.host: <span class="token number">127.0</span>.0.1
http.host: <span class="token number">0.0</span>.0.0
http.port: <span class="token number">9200</span>
discovery.seed_hosts: <span class="token punctuation">[</span><span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">]</span>
cluster.initial_master_nodes: <span class="token punctuation">[</span><span class="token string">&quot;node-1&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>创建<code>es</code>用户 因为<code>ElasticSearch</code>不支持<code>Root</code>用户直接操作，因此我们需要创建一个<code>es</code>用户</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">useradd</span> es
<span class="token function">chown</span> <span class="token parameter variable">-R</span> es:es /usr/local/elasticsearch-7.10.2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h3><ul><li>切换用户成es用户进行操作</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">su</span> - es
/usr/local/elasticsearch-7.10.2/bin/elasticsearch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>后台启动</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/elasticsearch-7.10.2/bin/elasticsearch <span class="token parameter variable">-d</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,13),v=n("code",null,"9200",-1),m={href:"http://120.78.129.95:9200/",target:"_blank",rel:"noopener noreferrer"},b=n("img",{src:"https://oscimg.oschina.net/oscnet/up-38da6dfc0998a88b8b2f974f6192ae6420a.png",alt:"Elasticsearch"},null,-1),h=a('<h2 id="logstash" tabindex="-1"><a class="header-anchor" href="#logstash" aria-hidden="true">#</a> Logstash</h2><h3 id="简介-1" tabindex="-1"><a class="header-anchor" href="#简介-1" aria-hidden="true">#</a> 简介</h3><p>Logstash是一个开源的服务器端数据处理管道，能够同时从多个来源采集数据，转换数据，然后将数据发送到最喜欢的存储库中（我们的存储库当然是ElasticSearch）</p><h3 id="下载-1" tabindex="-1"><a class="header-anchor" href="#下载-1" aria-hidden="true">#</a> 下载</h3>',4),g={href:"https://www.elastic.co/cn/downloads/logstash",target:"_blank",rel:"noopener noreferrer"},f=n("img",{src:"https://oscimg.oschina.net/oscnet/up-7780b6e1555bae2c2d2ce3e1dde44d9e783.png",alt:"Logstash"},null,-1),_=a(`<h3 id="安装-1" tabindex="-1"><a class="header-anchor" href="#安装-1" aria-hidden="true">#</a> 安装</h3><ul><li>解压到相应目录</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> logstash-7.10.2.tar.gz <span class="token parameter variable">-C</span> /usr/local
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>新增配置文件</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/logstash-7.10.2/bin
<span class="token function">vim</span> logstash-elasticsearch.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>input <span class="token punctuation">{</span>
	stdin <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
output <span class="token punctuation">{</span>
	elasticsearch <span class="token punctuation">{</span>
		hosts <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;120.78.129.95:9200&#39;</span>
	<span class="token punctuation">}</span>
	stdout <span class="token punctuation">{</span>
		codec <span class="token operator">=</span><span class="token operator">&gt;</span> rubydebug
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动-1" tabindex="-1"><a class="header-anchor" href="#启动-1" aria-hidden="true">#</a> 启动</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./logstash <span class="token parameter variable">-f</span> logstash-elasticsearch.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="kibana" tabindex="-1"><a class="header-anchor" href="#kibana" aria-hidden="true">#</a> Kibana</h2><h3 id="简介-2" tabindex="-1"><a class="header-anchor" href="#简介-2" aria-hidden="true">#</a> 简介</h3><p>Kibana 是一款开源的数据分析和可视化平台，它是 Elastic Stack 成员之一，设计用于和 Elasticsearch 协作。您可以使用 Kibana 对 Elasticsearch 索引中的数据进行搜索、查看、交互操作。您可以很方便的利用图表、表格及地图对数据进行多元化的分析和呈现。</p><h3 id="下载-2" tabindex="-1"><a class="header-anchor" href="#下载-2" aria-hidden="true">#</a> 下载</h3>`,12),x={href:"https://www.elastic.co/cn/downloads/kibana",target:"_blank",rel:"noopener noreferrer"},q=n("img",{src:"https://oscimg.oschina.net/oscnet/up-8a4821b16ba2f3bd96baf9a3b2bb7b55f0b.png",alt:"Kibana"},null,-1),w=a(`<h3 id="安装-2" tabindex="-1"><a class="header-anchor" href="#安装-2" aria-hidden="true">#</a> 安装</h3><ul><li>解压到相应目录</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> kibana-7.10.2-linux-x86_64.tar.gz <span class="token parameter variable">-C</span> /usr/local
<span class="token function">mv</span> /usr/local/kibana-7.10.2-linux-x86_64 /usr/local/kibana-7.10.2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>修改配置</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/kibana-7.10.2/config
<span class="token function">vim</span> kibana.yml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>server.port: <span class="token number">5601</span> 
server.host: <span class="token string">&quot;0.0.0.0&quot;</span> 
elasticsearch.hosts: <span class="token punctuation">[</span><span class="token string">&quot;http://120.78.129.95:9200&quot;</span><span class="token punctuation">]</span> 
kibana.index: <span class="token string">&quot;.kibana&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>授权es用户</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>chown -R es:es /usr/local/kibana-7.10.2/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="启动-2" tabindex="-1"><a class="header-anchor" href="#启动-2" aria-hidden="true">#</a> 启动</h3><ul><li>切换用户成es用户进行操作</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">su</span> - es
/usr/local/kibana-7.10.2/bin/kibana 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>后台启动</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/kibana-7.10.2/bin/kibana <span class="token operator">&amp;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,13),y=n("code",null,"5601",-1),E={href:"http://120.78.129.95:5601/",target:"_blank",rel:"noopener noreferrer"},j=n("img",{src:"https://oscimg.oschina.net/oscnet/up-f9bd125ad0b1d3887a2d3f94df9e9202d2c.png",alt:"kibana"},null,-1),$=a(`<h2 id="切换中文" tabindex="-1"><a class="header-anchor" href="#切换中文" aria-hidden="true">#</a> 切换中文</h2><p>在<code>config/kibana.yml</code>添加</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">i18n.locale</span><span class="token punctuation">:</span> <span class="token string">&quot;zh-CN&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="日志收集" tabindex="-1"><a class="header-anchor" href="#日志收集" aria-hidden="true">#</a> 日志收集</h2><p>对应服务器安装<code>logstash</code>，配置规则，例如新建<code>logstash-apache.conf</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>input <span class="token punctuation">{</span>
  <span class="token function">file</span> <span class="token punctuation">{</span>
    path <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&quot;/home/ruoyi/logs/sys-*.log&quot;</span>
	start_position <span class="token operator">=</span><span class="token operator">&gt;</span> beginning
	sincedb_path <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&quot;/dev/null&quot;</span>
	codec <span class="token operator">=</span><span class="token operator">&gt;</span> multiline <span class="token punctuation">{</span>
      pattern <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&quot;^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}&quot;</span>
      negate <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token boolean">true</span>
      auto_flush_interval <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">3</span>
      what <span class="token operator">=</span><span class="token operator">&gt;</span> previous
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

filter <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span>path<span class="token punctuation">]</span> <span class="token operator">=~</span> <span class="token string">&quot;info&quot;</span> <span class="token punctuation">{</span>
    mutate <span class="token punctuation">{</span> replace <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span> <span class="token builtin class-name">type</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&quot;sys-info&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
    grok <span class="token punctuation">{</span>
      match <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span> <span class="token string">&quot;message&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&quot;%{COMBINEDAPACHELOG}&quot;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">date</span> <span class="token punctuation">{</span>
      match <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span> <span class="token string">&quot;timestamp&quot;</span> , <span class="token string">&quot;dd/MMM/yyyy:HH:mm:ss Z&quot;</span> <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">[</span>path<span class="token punctuation">]</span> <span class="token operator">=~</span> <span class="token string">&quot;error&quot;</span> <span class="token punctuation">{</span>
    mutate <span class="token punctuation">{</span> replace <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span> <span class="token builtin class-name">type</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&quot;sys-error&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    mutate <span class="token punctuation">{</span> replace <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span> <span class="token builtin class-name">type</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&quot;random_logs&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

output <span class="token punctuation">{</span>
  elasticsearch <span class="token punctuation">{</span>
    hosts <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;120.78.129.95:9200&#39;</span>
  <span class="token punctuation">}</span>
  stdout <span class="token punctuation">{</span> codec <span class="token operator">=</span><span class="token operator">&gt;</span> rubydebug <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>启动logstash</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./logstash <span class="token parameter variable">-f</span> logstash-apache.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>通过<code>kibana</code>可视化检索各个服务日志数据 <img src="https://oscimg.oschina.net/oscnet/up-928d6f45a566fc7e6191db840a4b27de551.png" alt="kibana"></li></ul><h2 id="es集群搭建详细步骤-通俗易懂" tabindex="-1"><a class="header-anchor" href="#es集群搭建详细步骤-通俗易懂" aria-hidden="true">#</a> ES集群搭建详细步骤[通俗易懂]</h2>`,10),A=n("em",null,"Centos6",-1),S={href:"https://cloud.tencent.com/product/cvm?from=10680",target:"_blank",rel:"noopener noreferrer"},R=a(`<p>部署jdk 解压jdk放在/data目录，/data/jdk 配置环境变量，/etc/proifle里面加入如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token constant">JAVA_HOME</span><span class="token operator">=</span><span class="token operator">/</span>data<span class="token operator">/</span>jdk
<span class="token keyword">export</span> <span class="token constant">PATH</span><span class="token operator">=</span>$<span class="token constant">PATH</span><span class="token operator">:</span>$<span class="token constant">JAVA_HOME</span><span class="token operator">/</span>bin
<span class="token keyword">export</span> <span class="token constant">CLASSPATH</span><span class="token operator">=</span><span class="token punctuation">.</span><span class="token operator">:</span>$<span class="token constant">JAVA_HOME</span><span class="token operator">/</span>lib<span class="token operator">/</span>tools<span class="token punctuation">.</span>jar<span class="token operator">:</span>$<span class="token constant">JAVA_HOME</span><span class="token operator">/</span>lib<span class="token operator">/</span>dt<span class="token punctuation">.</span>jar<span class="token operator">:</span>$<span class="token constant">CLASSPATH</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>复制</p><p>source /etc/profile生效，查看版本java -version</p><p>部署ES集群，三台机器同样的操作</p><h3 id="_1、添加普通用户启动" tabindex="-1"><a class="header-anchor" href="#_1、添加普通用户启动" aria-hidden="true">#</a> 1、添加普通用户启动</h3><p>es <code>useradd elasticsearch</code></p><h3 id="_2、安装es" tabindex="-1"><a class="header-anchor" href="#_2、安装es" aria-hidden="true">#</a> 2、安装ES</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>tar xf elasticsearch<span class="token operator">-</span><span class="token number">6.4</span><span class="token number">.0</span><span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz <span class="token operator">-</span><span class="token constant">C</span> <span class="token operator">/</span>data<span class="token operator">/</span>
mv <span class="token operator">/</span>data<span class="token operator">/</span>elasticsearch<span class="token operator">-</span><span class="token number">6.4</span><span class="token number">.0</span><span class="token operator">/</span> <span class="token operator">/</span>data<span class="token operator">/</span>elasticsearch
mkdir <span class="token operator">/</span>data<span class="token operator">/</span>elasticsearch<span class="token operator">/</span>startlogs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>复制</p><h3 id="_3、配置elasticsearch-yml文件内容" tabindex="-1"><a class="header-anchor" href="#_3、配置elasticsearch-yml文件内容" aria-hidden="true">#</a> 3、配置elasticsearch.yml文件内容</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cp <span class="token operator">/</span>data<span class="token operator">/</span>elasticsearch<span class="token operator">/</span>config<span class="token operator">/</span>elasticsearch<span class="token punctuation">.</span>yml <span class="token operator">/</span>data<span class="token operator">/</span>elasticsearch<span class="token operator">/</span>config<span class="token operator">/</span>elasticsearch<span class="token punctuation">.</span>yml<span class="token punctuation">.</span>bak
cat elasticsearch<span class="token punctuation">.</span>yml
cluster<span class="token punctuation">.</span>name<span class="token operator">:</span> escluster
node<span class="token punctuation">.</span>name<span class="token operator">:</span> es1
node<span class="token punctuation">.</span>master<span class="token operator">:</span> <span class="token boolean">true</span>
node<span class="token punctuation">.</span>data<span class="token operator">:</span> <span class="token boolean">true</span>
path<span class="token punctuation">.</span>data<span class="token operator">:</span> <span class="token operator">/</span>data<span class="token operator">/</span>elasticsearch<span class="token operator">/</span>data
path<span class="token punctuation">.</span>logs<span class="token operator">:</span> <span class="token operator">/</span>data<span class="token operator">/</span>elasticsearch<span class="token operator">/</span>logs
bootstrap<span class="token punctuation">.</span>memory_lock<span class="token operator">:</span> <span class="token boolean">true</span>
bootstrap<span class="token punctuation">.</span>system_call_filter<span class="token operator">:</span> <span class="token boolean">false</span>
http<span class="token punctuation">.</span>port<span class="token operator">:</span> <span class="token number">9200</span>
network<span class="token punctuation">.</span>host<span class="token operator">:</span> <span class="token number">0.0</span><span class="token number">.0</span><span class="token number">.0</span>
discovery<span class="token punctuation">.</span>zen<span class="token punctuation">.</span>minimum_master_nodes<span class="token operator">:</span> <span class="token number">2</span>
discovery<span class="token punctuation">.</span>zen<span class="token punctuation">.</span>ping_timeout<span class="token operator">:</span> 3s
discovery<span class="token punctuation">.</span>zen<span class="token punctuation">.</span>ping<span class="token punctuation">.</span>unicast<span class="token punctuation">.</span>hosts<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;172.16.0.8:9300&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;172.16.0.6:9300&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;172.16.0.22:9300&quot;</span><span class="token punctuation">]</span>




# 其他配置
<span class="token punctuation">[</span>root@k8s<span class="token operator">-</span>node2 <span class="token operator">~</span><span class="token punctuation">]</span>#  cat <span class="token operator">/</span>data<span class="token operator">/</span>elasticsearch<span class="token operator">-</span><span class="token number">7.10</span><span class="token number">.2</span><span class="token operator">/</span>config<span class="token operator">/</span>elasticsearch<span class="token punctuation">.</span>yml <span class="token operator">|</span>grep <span class="token operator">-</span>v <span class="token string">&quot;^#&quot;</span>
cluster<span class="token punctuation">.</span>name<span class="token operator">:</span> my<span class="token operator">-</span>application
node<span class="token punctuation">.</span>name<span class="token operator">:</span> node<span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">161</span>
path<span class="token punctuation">.</span>data<span class="token operator">:</span> <span class="token operator">/</span>home<span class="token operator">/</span>es<span class="token operator">/</span>data
path<span class="token punctuation">.</span>logs<span class="token operator">:</span> <span class="token operator">/</span>home<span class="token operator">/</span>es<span class="token operator">/</span>logs
network<span class="token punctuation">.</span>host<span class="token operator">:</span> <span class="token number">0.0</span><span class="token number">.0</span><span class="token number">.0</span>
http<span class="token punctuation">.</span>port<span class="token operator">:</span> <span class="token number">9200</span>
discovery<span class="token punctuation">.</span>seed_hosts<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;172.168.200.161&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;172.168.200.162&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;172.168.200.163&quot;</span><span class="token punctuation">]</span>
cluster<span class="token punctuation">.</span>initial_master_nodes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;node-1-161&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;node-2-162&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;node-3-163&quot;</span><span class="token punctuation">]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>复制</p><p>三台机器不一样的配置点如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>node<span class="token punctuation">.</span>name<span class="token operator">:</span> es1      <span class="token operator">===</span>》<span class="token number">172.16</span><span class="token number">.0</span><span class="token number">.8</span>
node<span class="token punctuation">.</span>name<span class="token operator">:</span> es2      <span class="token operator">===</span>》<span class="token number">172.16</span><span class="token number">.0</span><span class="token number">.6</span>
node<span class="token punctuation">.</span>name<span class="token operator">:</span> es3      <span class="token operator">===</span>》<span class="token number">172.16</span><span class="token number">.0</span><span class="token number">.22</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、配置文件重点参数解析" tabindex="-1"><a class="header-anchor" href="#_4、配置文件重点参数解析" aria-hidden="true">#</a> 4、配置文件重点参数解析</h3><p>（1）cluster.name 集群名字，三台集群的集群名字都必须一致</p><p>（2）node.name 节点名字，三台ES节点字都必须不一样</p><p>（3）discovery.zen.minimum_master_nodes:2 表示集群最少的master数，如果集群的最少master数据少于指定的数，将无法启动，官方推荐node master数设置为集群数/2+1，我这里三台ES服务器，配置最少需要两台master，整个集群才可正常运行，</p><p>（4）node.master该节点是否有资格选举为master，如果上面设了两个mater_node 2，也就是最少两个master节点，则集群中必须有两台es服务器的配置为node.master: true的配置，配置了2个节点的话，如果主服务器宕机，整个集群会不可用，所以三台服务器，需要配置3个node.masdter为true,这样三个master，宕了一个主节点的话，他又会选举新的master，还有两个节点可以用，只要配了node master为true的ES服务器数正在运行的数量不少于master_node的配置数，则整个集群继续可用，我这里则配置三台es node.master都为true，也就是三个master，master服务器主要管理集群状态，负责元数据处理，比如索引增加删除分片分配等，数据存储和查询都不会走主节点，压力较小，jvm内存可分配较低一点</p><p>（5）node.data 存储索引数据，三台都设为true即可</p><p>（6）bootstrap.memory_lock: true 锁住物理内存，不使用swap内存，有swap内存的可以开启此项</p><p>（7）discovery.zen.ping_timeout: 3000s 自动发现拼其他节点超时时间</p><p>（8）discovery.zen.ping.unicast.hosts: [“172.16.0.8:9300″,”172.16.0.6:9300″,”172.16.0.22:9300”] 设置集群的初始节点列表，集群互通端口为9300</p><h3 id="_5、jvm调优" tabindex="-1"><a class="header-anchor" href="#_5、jvm调优" aria-hidden="true">#</a> 5、jvm调优</h3><p>vim /data/elasticsearch/config/jvm.options</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">-</span>Xms1g   修改为 <span class="token operator">===</span><span class="token operator">&gt;</span>  <span class="token operator">-</span>Xms2g
<span class="token operator">-</span>Xmx1g   修改为 <span class="token operator">===</span><span class="token operator">&gt;</span>  <span class="token operator">-</span>Xmx2g
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>复制</p><p>设置为物理内存一半最佳，可根据服务器内存去选择调</p><h3 id="_6、设置权限" tabindex="-1"><a class="header-anchor" href="#_6、设置权限" aria-hidden="true">#</a> 6、设置权限</h3><p>chown -R elasticsearch: /data/elasticsearch</p><h3 id="_7、操作系统调优" tabindex="-1"><a class="header-anchor" href="#_7、操作系统调优" aria-hidden="true">#</a> 7、操作系统调优</h3><p>（必须配置，否则ES起不来）</p><p>【1】内存优化 在/etc/sysctl.conf添加如下内容</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>fs<span class="token punctuation">.</span>file<span class="token operator">-</span>max<span class="token operator">=</span><span class="token number">655360</span>
vm<span class="token punctuation">.</span>max_map_count<span class="token operator">=</span><span class="token number">655360</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>复制</p><p>sysctl -p生效</p><p>解释： （1）vm.max_map_count=655360 系统最大打开文件描述符数</p><p>（2）vm.max_map_count=655360 限制一个进程拥有虚拟内存区域的大小</p><p>【2】修改vim /etc/security/limits.conf</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">*</span> soft nofile <span class="token number">65536</span>
<span class="token operator">*</span> hard nofile <span class="token number">65536</span>
<span class="token operator">*</span> soft nproc <span class="token number">65536</span>
<span class="token operator">*</span> hard nproc <span class="token number">65536</span>
<span class="token operator">*</span> soft memlock unlimited
<span class="token operator">*</span> hard memlock unlimited
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>复制</p><p>解释: (nofile)最大开打开文件描述符 (nproc)最大用户进程数 (memlock)最大锁定内存地址空间</p><p>【3】修改/etc/security/limits.d/90-nproc.conf 将1024修改为65536</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">*</span>          soft    nproc     <span class="token number">1024</span>     修改前
<span class="token operator">*</span>          soft    nproc     <span class="token number">65536</span>   修改后
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>复制</p><p>ctrl +d从进终端 ulimit -a查看</p><h3 id="_8、编写es启动脚本" tabindex="-1"><a class="header-anchor" href="#_8、编写es启动脚本" aria-hidden="true">#</a> 8、编写es启动脚本</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token hashbang comment">#!/bin/bash</span>
<span class="token constant">ROOT</span><span class="token operator">=</span><span class="token operator">/</span>data

<span class="token constant">USER</span><span class="token operator">=</span>elasticsearch

<span class="token constant">NAME</span><span class="token operator">=</span>elasticsearch

<span class="token constant">DIR</span><span class="token operator">=</span>$<span class="token punctuation">{</span><span class="token constant">ROOT</span><span class="token punctuation">}</span><span class="token operator">/</span>$<span class="token punctuation">{</span><span class="token constant">NAME</span><span class="token punctuation">}</span>
<span class="token constant">BIN</span><span class="token operator">=</span><span class="token string">&quot;\${DIR}/bin/\${NAME}&quot;</span>
<span class="token constant">PID</span><span class="token operator">=</span>$<span class="token punctuation">{</span><span class="token constant">DIR</span><span class="token punctuation">}</span><span class="token operator">/</span><span class="token punctuation">.</span>$<span class="token punctuation">{</span><span class="token constant">NAME</span><span class="token punctuation">}</span><span class="token punctuation">.</span>pid
<span class="token constant">LOG</span><span class="token operator">=</span>$<span class="token punctuation">{</span><span class="token constant">DIR</span><span class="token punctuation">}</span><span class="token operator">/</span>startlogs<span class="token operator">/</span>$<span class="token punctuation">{</span><span class="token constant">NAME</span><span class="token punctuation">}</span><span class="token punctuation">.</span>log

<span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  ps <span class="token operator">-</span>ef <span class="token operator">|</span>grep $<span class="token punctuation">{</span><span class="token constant">DIR</span><span class="token punctuation">}</span><span class="token operator">|</span>grep <span class="token operator">-</span>v grep
  <span class="token constant">PROC_STAT</span><span class="token operator">=</span>$<span class="token operator">?</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> $<span class="token punctuation">{</span><span class="token constant">PROC_STAT</span><span class="token punctuation">}</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">]</span>
        then
        su <span class="token operator">-</span> $<span class="token punctuation">{</span><span class="token constant">USER</span><span class="token punctuation">}</span> <span class="token operator">-</span>c <span class="token string">&quot;\${BIN} &gt; \${LOG} 2&gt;&amp;1 &amp;&quot;</span>
        sleep <span class="token number">1</span>
        <span class="token constant">PROC_PID</span><span class="token operator">=</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ps -ef|grep </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">DIR</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">|grep -v grep|awk &#39;{print $2}&#39;</span><span class="token template-punctuation string">\`</span></span>
        su <span class="token operator">-</span> $<span class="token punctuation">{</span><span class="token constant">USER</span><span class="token punctuation">}</span> <span class="token operator">-</span>c <span class="token string">&quot;echo \${PROC_PID} &gt; \${PID}&quot;</span>
  <span class="token keyword">else</span>
        echo <span class="token string">&quot;\${NAME} start fail,please check it!&quot;</span>
  fi
<span class="token punctuation">}</span>

<span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">-</span>f $<span class="token constant">PID</span> <span class="token punctuation">]</span>
        then
        kill <span class="token function">$</span><span class="token punctuation">(</span>cat $<span class="token constant">PID</span><span class="token punctuation">)</span>
        rm <span class="token operator">-</span>rf $<span class="token punctuation">{</span><span class="token constant">PID</span><span class="token punctuation">}</span>
  <span class="token keyword">else</span>
        <span class="token constant">PROC_PID</span><span class="token operator">=</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ps -ef |grep </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">DIR</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">|grep -v grep|awk &#39;{print $2}&#39;</span><span class="token template-punctuation string">\`</span></span>
        <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">-</span>n $<span class="token punctuation">{</span><span class="token constant">PROC_PID</span><span class="token punctuation">}</span> <span class="token punctuation">]</span>
                then
                kill $<span class="token punctuation">{</span><span class="token constant">PROC_PID</span><span class="token punctuation">}</span>
                echo <span class="token string">&quot;\${NAME} had close.&quot;</span>
        <span class="token keyword">else</span>
                echo <span class="token string">&quot;\${NAME} maybe not run ,please check it!&quot;</span>
        fi
  fi
<span class="token punctuation">}</span>
<span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  ps <span class="token operator">-</span>ef <span class="token operator">|</span>grep $<span class="token punctuation">{</span><span class="token constant">DIR</span><span class="token punctuation">}</span><span class="token operator">|</span>grep <span class="token operator">-</span>v grep
<span class="token punctuation">}</span>

<span class="token keyword">case</span> <span class="token string">&quot;$1&quot;</span> <span class="token keyword">in</span>
  start<span class="token punctuation">)</span>
        start
  <span class="token punctuation">;</span><span class="token punctuation">;</span>
  stop<span class="token punctuation">)</span>
        stop
  <span class="token punctuation">;</span><span class="token punctuation">;</span>
  status<span class="token punctuation">)</span>
        status
  <span class="token punctuation">;</span><span class="token punctuation">;</span>
  restart<span class="token punctuation">)</span>
        stop
        sleep <span class="token number">5</span>
        start
  <span class="token punctuation">;</span><span class="token punctuation">;</span>
  <span class="token operator">*</span><span class="token punctuation">)</span>
  echo <span class="token string">&quot;Usage: /etc/init.d/\${NAME} {start|stop|restart}&quot;</span>
  exit <span class="token number">1</span>
esac

exit <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>复制</p><p>查看启动</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>netstat <span class="token operator">-</span>tlnp <span class="token operator">|</span> egrep <span class="token string">&#39;9200|9300&#39;</span>
service elasticsearch status
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>复制</p><h3 id="_9、监控api" tabindex="-1"><a class="header-anchor" href="#_9、监控api" aria-hidden="true">#</a> 9、监控API</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">GET</span>  <span class="token operator">/</span>_cat

<span class="token operator">/</span>_cat<span class="token operator">/</span>health
<span class="token operator">/</span>_cat<span class="token operator">/</span>nodes
<span class="token operator">/</span>_cat<span class="token operator">/</span>master
<span class="token operator">/</span>_cat<span class="token operator">/</span>indices
<span class="token operator">/</span>_cat<span class="token operator">/</span>allocation 
<span class="token operator">/</span>_cat<span class="token operator">/</span>shards 
<span class="token operator">/</span>_cat<span class="token operator">/</span>shards<span class="token operator">/</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span>
<span class="token operator">/</span>_cat<span class="token operator">/</span>thread_pool
<span class="token operator">/</span>_cat<span class="token operator">/</span>segments 
<span class="token operator">/</span>_cat<span class="token operator">/</span>segments<span class="token operator">/</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,55);function I(P,O){const e=l("ExternalLinkIcon");return o(),c("div",null,[r,n("p",null,[s("到官网下载： ("),n("a",d,[s("https://www.elastic.co/cn/downloads/elasticsearch (opens new window)"),t(e)]),s(") "),u]),k,n("p",null,[s("在浏览器打开"),v,s("端口地址： ("),n("a",m,[s("http://120.78.129.95:9200/ (opens new window)"),t(e)]),s(")，如果出现了下面的信息，就表示已经成功启动了 "),b]),h,n("p",null,[s("到官网下载： ("),n("a",g,[s("https://www.elastic.co/cn/downloads/logstash (opens new window)"),t(e)]),s(") "),f]),_,n("p",null,[s("到官网下载： ("),n("a",x,[s("https://www.elastic.co/cn/downloads/kibana (opens new window)"),t(e)]),s(") "),q]),w,n("p",null,[s("在浏览器打开"),y,s("端口地址： ("),n("a",E,[s("http://120.78.129.95:5601/ (opens new window)"),t(e)]),s(")，如果出现了下面的信息，就表示已经成功启动了 "),j]),$,n("p",null,[s("@系统："),A,s("*** ES版本：6.4.0 "),n("a",S,[s("服务器"),t(e)]),s("三台 172.16.0.8 172.16.0.6 172.16.0.22")]),R])}const C=p(i,[["render",I],["__file","elk.html.vue"]]);export{C as default};
