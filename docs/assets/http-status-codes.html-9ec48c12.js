const e=JSON.parse('{"key":"v-45cf2860","path":"/cs-basics/network/http-status-codes.html","title":"HTTP 常见状态码总结（应用层）","lang":"zh-CN","frontmatter":{"title":"HTTP 常见状态码总结（应用层）","category":["计算机基础"],"tag":["计算机网络"],"description":"HTTP 状态码用于描述 HTTP 请求的结果，比如2xx 就代表请求被成功处理。 1xx Informational（信息性状态码） 相比于其他类别状态码来说，1xx 你平时你大概率不会碰到，所以这里直接跳过。 2xx Success（成功状态码） 200 OK ：请求被成功处理。比如我们发送一个查询用户数据的HTTP 请求到服务端，服务端正确返回了用户数据。这个是我们平时最常见的一个 HTTP 状态码。 201 Created ：请求被成功处理并且在服务端创建了一个新的资源。比如我们通过 POST 请求创建一个新的用户。 202 Accepted ：服务端已经接收到了请求，但是还未处理。 204 No Content ： 服务端已经成功处理了请求，但是没有返回任何内容。","head":[["meta",{"property":"og:url","content":"https://javaguide.cn/cs-basics/network/http-status-codes.html"}],["meta",{"property":"og:site_name","content":"JavaGuide(Java面试+学习指南)"}],["meta",{"property":"og:title","content":"HTTP 常见状态码总结（应用层）"}],["meta",{"property":"og:description","content":"HTTP 状态码用于描述 HTTP 请求的结果，比如2xx 就代表请求被成功处理。 1xx Informational（信息性状态码） 相比于其他类别状态码来说，1xx 你平时你大概率不会碰到，所以这里直接跳过。 2xx Success（成功状态码） 200 OK ：请求被成功处理。比如我们发送一个查询用户数据的HTTP 请求到服务端，服务端正确返回了用户数据。这个是我们平时最常见的一个 HTTP 状态码。 201 Created ：请求被成功处理并且在服务端创建了一个新的资源。比如我们通过 POST 请求创建一个新的用户。 202 Accepted ：服务端已经接收到了请求，但是还未处理。 204 No Content ： 服务端已经成功处理了请求，但是没有返回任何内容。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-23T10:39:58.000Z"}],["meta",{"property":"article:tag","content":"计算机网络"}],["meta",{"property":"article:modified_time","content":"2023-02-23T10:39:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HTTP 常见状态码总结（应用层）\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-23T10:39:58.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"1xx Informational（信息性状态码）","slug":"_1xx-informational-信息性状态码","link":"#_1xx-informational-信息性状态码","children":[]},{"level":3,"title":"2xx Success（成功状态码）","slug":"_2xx-success-成功状态码","link":"#_2xx-success-成功状态码","children":[]},{"level":3,"title":"3xx Redirection（重定向状态码）","slug":"_3xx-redirection-重定向状态码","link":"#_3xx-redirection-重定向状态码","children":[]},{"level":3,"title":"4xx Client Error（客户端错误状态码）","slug":"_4xx-client-error-客户端错误状态码","link":"#_4xx-client-error-客户端错误状态码","children":[]},{"level":3,"title":"5xx Server Error（服务端错误状态码）","slug":"_5xx-server-error-服务端错误状态码","link":"#_5xx-server-error-服务端错误状态码","children":[]},{"level":3,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1677148798000,"updatedTime":1677148798000,"contributors":[{"name":"xiaobai-myh123","email":"xiaobaix25@gamil.com","commits":1}]},"readingTime":{"minutes":2.97,"words":892},"filePathRelative":"cs-basics/network/http-status-codes.md","localizedDate":"2023年2月23日","excerpt":"<p>HTTP 状态码用于描述 HTTP 请求的结果，比如2xx 就代表请求被成功处理。</p>\\n<p><img src=\\"https://my-blog-to-use.oss-cn-beijing.aliyuncs.com/2019/7/状态码.png\\" alt=\\"状态码\\"></p>\\n<h3> 1xx Informational（信息性状态码）</h3>\\n<p>相比于其他类别状态码来说，1xx 你平时你大概率不会碰到，所以这里直接跳过。</p>\\n<h3> 2xx Success（成功状态码）</h3>\\n<ul>\\n<li><strong>200 OK</strong> ：请求被成功处理。比如我们发送一个查询用户数据的HTTP 请求到服务端，服务端正确返回了用户数据。这个是我们平时最常见的一个 HTTP 状态码。</li>\\n<li><strong>201 Created</strong> ：请求被成功处理并且在服务端创建了一个新的资源。比如我们通过 POST 请求创建一个新的用户。</li>\\n<li><strong>202 Accepted</strong> ：服务端已经接收到了请求，但是还未处理。</li>\\n<li><strong>204 No Content</strong> ： 服务端已经成功处理了请求，但是没有返回任何内容。</li>\\n</ul>","copyright":{},"autoDesc":true}');export{e as data};
