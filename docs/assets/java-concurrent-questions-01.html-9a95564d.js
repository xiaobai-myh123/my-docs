const e=JSON.parse('{"key":"v-7ea03a6e","path":"/java/concurrent/java-concurrent-questions-01.html","title":"Java 并发常见面试题总结（上）","lang":"zh-CN","frontmatter":{"title":"Java 并发常见面试题总结（上）","category":["Java"],"tag":["Java并发"],"head":[["meta",{"name":"keywords","content":"线程和进程,并发和并行,多线程,死锁,线程的生命周期"}],["meta",{"name":"description","content":"Java并发常见知识点和面试题总结（含详细解答），希望对你有帮助！"}],["meta",{"property":"og:url","content":"https://javaguide.cn/java/concurrent/java-concurrent-questions-01.html"}],["meta",{"property":"og:site_name","content":"JavaGuide(Java面试+学习指南)"}],["meta",{"property":"og:title","content":"Java 并发常见面试题总结（上）"}],["meta",{"property":"og:description","content":"什么是线程和进程? 何为进程? 进程是程序的一次执行过程，是系统运行程序的基本单位，因此进程是动态的。系统运行一个程序即是一个进程从创建，运行到消亡的过程。 在 Java 中，当我们启动 main 函数时其实就是启动了一个 JVM 的进程，而 main 函数所在的线程就是这个进程中的一个线程，也称主线程。 如下图所示，在 Windows 中通过查看任务管理器的方式，我们就可以清楚看到 Windows 当前运行的进程（.exe 文件的运行）。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"Java并发"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 并发常见面试题总结（上）\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"description":"什么是线程和进程? 何为进程? 进程是程序的一次执行过程，是系统运行程序的基本单位，因此进程是动态的。系统运行一个程序即是一个进程从创建，运行到消亡的过程。 在 Java 中，当我们启动 main 函数时其实就是启动了一个 JVM 的进程，而 main 函数所在的线程就是这个进程中的一个线程，也称主线程。 如下图所示，在 Windows 中通过查看任务管理器的方式，我们就可以清楚看到 Windows 当前运行的进程（.exe 文件的运行）。"},"headers":[{"level":2,"title":"什么是线程和进程?","slug":"什么是线程和进程","link":"#什么是线程和进程","children":[{"level":3,"title":"何为进程?","slug":"何为进程","link":"#何为进程","children":[]},{"level":3,"title":"何为线程?","slug":"何为线程","link":"#何为线程","children":[]}]},{"level":2,"title":"请简要描述线程与进程的关系,区别及优缺点？","slug":"请简要描述线程与进程的关系-区别及优缺点","link":"#请简要描述线程与进程的关系-区别及优缺点","children":[{"level":3,"title":"图解进程和线程的关系","slug":"图解进程和线程的关系","link":"#图解进程和线程的关系","children":[]},{"level":3,"title":"程序计数器为什么是私有的?","slug":"程序计数器为什么是私有的","link":"#程序计数器为什么是私有的","children":[]},{"level":3,"title":"虚拟机栈和本地方法栈为什么是私有的?","slug":"虚拟机栈和本地方法栈为什么是私有的","link":"#虚拟机栈和本地方法栈为什么是私有的","children":[]},{"level":3,"title":"一句话简单了解堆和方法区","slug":"一句话简单了解堆和方法区","link":"#一句话简单了解堆和方法区","children":[]}]},{"level":2,"title":"并发与并行的区别","slug":"并发与并行的区别","link":"#并发与并行的区别","children":[]},{"level":2,"title":"同步和异步的区别","slug":"同步和异步的区别","link":"#同步和异步的区别","children":[]},{"level":2,"title":"为什么要使用多线程呢?","slug":"为什么要使用多线程呢","link":"#为什么要使用多线程呢","children":[]},{"level":2,"title":"使用多线程可能带来什么问题?","slug":"使用多线程可能带来什么问题","link":"#使用多线程可能带来什么问题","children":[]},{"level":2,"title":"说说线程的生命周期和状态?","slug":"说说线程的生命周期和状态","link":"#说说线程的生命周期和状态","children":[]},{"level":2,"title":"什么是上下文切换?","slug":"什么是上下文切换","link":"#什么是上下文切换","children":[]},{"level":2,"title":"什么是线程死锁?如何避免死锁?","slug":"什么是线程死锁-如何避免死锁","link":"#什么是线程死锁-如何避免死锁","children":[{"level":3,"title":"认识线程死锁","slug":"认识线程死锁","link":"#认识线程死锁","children":[]},{"level":3,"title":"如何预防和避免线程死锁?","slug":"如何预防和避免线程死锁","link":"#如何预防和避免线程死锁","children":[]}]},{"level":2,"title":"sleep() 方法和 wait() 方法对比","slug":"sleep-方法和-wait-方法对比","link":"#sleep-方法和-wait-方法对比","children":[]},{"level":2,"title":"为什么 wait() 方法不定义在 Thread 中？","slug":"为什么-wait-方法不定义在-thread-中","link":"#为什么-wait-方法不定义在-thread-中","children":[]},{"level":2,"title":"可以直接调用 Thread 类的 run 方法吗？","slug":"可以直接调用-thread-类的-run-方法吗","link":"#可以直接调用-thread-类的-run-方法吗","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":16.68,"words":5004},"filePathRelative":"java/concurrent/java-concurrent-questions-01.md","excerpt":"<h2> 什么是线程和进程?</h2>\\n<h3> 何为进程?</h3>\\n<p>进程是程序的一次执行过程，是系统运行程序的基本单位，因此进程是动态的。系统运行一个程序即是一个进程从创建，运行到消亡的过程。</p>\\n<p>在 Java 中，当我们启动 main 函数时其实就是启动了一个 JVM 的进程，而 main 函数所在的线程就是这个进程中的一个线程，也称主线程。</p>\\n<p>如下图所示，在 Windows 中通过查看任务管理器的方式，我们就可以清楚看到 Windows 当前运行的进程（<code>.exe</code> 文件的运行）。</p>\\n<p><img src=\\"https://my-blog-to-use.oss-cn-beijing.aliyuncs.com/2019-6/进程示例图片-Windows.png\\" alt=\\"进程示例图片-Windows\\"></p>","copyright":{},"autoDesc":true}');export{e as data};
