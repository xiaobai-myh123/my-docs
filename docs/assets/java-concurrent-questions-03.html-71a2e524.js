const e=JSON.parse('{"key":"v-77ccd7f2","path":"/java/concurrent/java-concurrent-questions-03.html","title":"Java 并发常见面试题总结（下）","lang":"zh-CN","frontmatter":{"title":"Java 并发常见面试题总结（下）","category":["Java"],"tag":["Java并发"],"head":[["meta",{"name":"keywords","content":"多线程,死锁,线程池,CAS,AQS"}],["meta",{"name":"description","content":"Java并发常见知识点和面试题总结（含详细解答），希望对你有帮助！"}],["meta",{"property":"og:url","content":"https://javaguide.cn/java/concurrent/java-concurrent-questions-03.html"}],["meta",{"property":"og:site_name","content":"JavaGuide(Java面试+学习指南)"}],["meta",{"property":"og:title","content":"Java 并发常见面试题总结（下）"}],["meta",{"property":"og:description","content":"线程池 为什么要用线程池？ 池化技术想必大家已经屡见不鲜了，线程池、数据库连接池、Http 连接池等等都是对这个思想的应用。池化技术的思想主要是为了减少每次获取资源的消耗，提高对资源的利用率。 线程池提供了一种限制和管理资源（包括执行一个任务）的方式。 每个线程池还维护一些基本统计信息，例如已完成任务的数量。 这里借用《Java 并发编程的艺术》提到的来说一下使用线程池的好处："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"Java并发"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 并发常见面试题总结（下）\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"description":"线程池 为什么要用线程池？ 池化技术想必大家已经屡见不鲜了，线程池、数据库连接池、Http 连接池等等都是对这个思想的应用。池化技术的思想主要是为了减少每次获取资源的消耗，提高对资源的利用率。 线程池提供了一种限制和管理资源（包括执行一个任务）的方式。 每个线程池还维护一些基本统计信息，例如已完成任务的数量。 这里借用《Java 并发编程的艺术》提到的来说一下使用线程池的好处："},"headers":[{"level":2,"title":"线程池","slug":"线程池","link":"#线程池","children":[{"level":3,"title":"为什么要用线程池？","slug":"为什么要用线程池","link":"#为什么要用线程池","children":[]},{"level":3,"title":"如何创建线程池？","slug":"如何创建线程池","link":"#如何创建线程池","children":[]},{"level":3,"title":"核心线程数和最大线程数有什么区别？","slug":"核心线程数和最大线程数有什么区别","link":"#核心线程数和最大线程数有什么区别","children":[]},{"level":3,"title":"线程池的饱和策略有哪些？","slug":"线程池的饱和策略有哪些","link":"#线程池的饱和策略有哪些","children":[]},{"level":3,"title":"线程池原理是什么？","slug":"线程池原理是什么","link":"#线程池原理是什么","children":[]},{"level":3,"title":"如何设定线程池的大小？","slug":"如何设定线程池的大小","link":"#如何设定线程池的大小","children":[]}]},{"level":2,"title":"Atomic 原子类","slug":"atomic-原子类","link":"#atomic-原子类","children":[]},{"level":2,"title":"AQS","slug":"aqs","link":"#aqs","children":[{"level":3,"title":"AQS 是什么？","slug":"aqs-是什么","link":"#aqs-是什么","children":[]},{"level":3,"title":"AQS 的原理是什么？","slug":"aqs-的原理是什么","link":"#aqs-的原理是什么","children":[]},{"level":3,"title":"Semaphore 有什么用？","slug":"semaphore-有什么用","link":"#semaphore-有什么用","children":[]},{"level":3,"title":"Semaphore 的原理是什么？","slug":"semaphore-的原理是什么","link":"#semaphore-的原理是什么","children":[]},{"level":3,"title":"CountDownLatch 有什么用？","slug":"countdownlatch-有什么用","link":"#countdownlatch-有什么用","children":[]},{"level":3,"title":"CountDownLatch 的原理是什么？","slug":"countdownlatch-的原理是什么","link":"#countdownlatch-的原理是什么","children":[]},{"level":3,"title":"用过 CountDownLatch 么？什么场景下用的？","slug":"用过-countdownlatch-么-什么场景下用的","link":"#用过-countdownlatch-么-什么场景下用的","children":[]},{"level":3,"title":"CyclicBarrier 有什么用？","slug":"cyclicbarrier-有什么用","link":"#cyclicbarrier-有什么用","children":[]},{"level":3,"title":"CyclicBarrier 的原理是什么？","slug":"cyclicbarrier-的原理是什么","link":"#cyclicbarrier-的原理是什么","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":25.6,"words":7681},"filePathRelative":"java/concurrent/java-concurrent-questions-03.md","excerpt":"<h2> 线程池</h2>\\n<h3> 为什么要用线程池？</h3>\\n<blockquote>\\n<p><strong>池化技术想必大家已经屡见不鲜了，线程池、数据库连接池、Http 连接池等等都是对这个思想的应用。池化技术的思想主要是为了减少每次获取资源的消耗，提高对资源的利用率。</strong></p>\\n</blockquote>\\n<p><strong>线程池</strong>提供了一种限制和管理资源（包括执行一个任务）的方式。 每个<strong>线程池</strong>还维护一些基本统计信息，例如已完成任务的数量。</p>\\n<p>这里借用《Java 并发编程的艺术》提到的来说一下<strong>使用线程池的好处</strong>：</p>","copyright":{},"autoDesc":true}');export{e as data};
