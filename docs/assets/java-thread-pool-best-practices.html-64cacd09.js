const e=JSON.parse('{"key":"v-4b8877b5","path":"/java/concurrent/java-thread-pool-best-practices.html","title":"Java 线程池最佳实践","lang":"zh-CN","frontmatter":{"title":"Java 线程池最佳实践","category":["Java"],"tag":["Java并发"],"description":"这篇文章篇幅虽短，但是绝对是干货。标题稍微有点夸张，嘿嘿，实际都是自己使用线程池的时候总结的一些个人感觉比较重要的点。 线程池知识回顾 开始这篇文章之前还是简单介绍线程池，之前写的《新手也能看懂的线程池学习总结》这篇文章介绍的很详细了。 为什么要使用线程池？ 池化技术想必大家已经屡见不鲜了，线程池、数据库连接池、Http 连接池等等都是对这个思想的应用。池化技术的思想主要是为了减少每次获取资源的消耗，提高对资源的利用率。","head":[["meta",{"property":"og:url","content":"https://javaguide.cn/java/concurrent/java-thread-pool-best-practices.html"}],["meta",{"property":"og:site_name","content":"JavaGuide(Java面试+学习指南)"}],["meta",{"property":"og:title","content":"Java 线程池最佳实践"}],["meta",{"property":"og:description","content":"这篇文章篇幅虽短，但是绝对是干货。标题稍微有点夸张，嘿嘿，实际都是自己使用线程池的时候总结的一些个人感觉比较重要的点。 线程池知识回顾 开始这篇文章之前还是简单介绍线程池，之前写的《新手也能看懂的线程池学习总结》这篇文章介绍的很详细了。 为什么要使用线程池？ 池化技术想必大家已经屡见不鲜了，线程池、数据库连接池、Http 连接池等等都是对这个思想的应用。池化技术的思想主要是为了减少每次获取资源的消耗，提高对资源的利用率。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://javaguide.cn/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-23T10:39:58.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Java 线程池最佳实践"}],["meta",{"property":"article:tag","content":"Java并发"}],["meta",{"property":"article:modified_time","content":"2023-02-23T10:39:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 线程池最佳实践\\",\\"image\\":[\\"https://javaguide.cn/\\"],\\"dateModified\\":\\"2023-02-23T10:39:58.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"线程池知识回顾","slug":"线程池知识回顾","link":"#线程池知识回顾","children":[{"level":3,"title":"为什么要使用线程池？","slug":"为什么要使用线程池","link":"#为什么要使用线程池","children":[]},{"level":3,"title":"线程池在实际项目的使用场景","slug":"线程池在实际项目的使用场景","link":"#线程池在实际项目的使用场景","children":[]},{"level":3,"title":"如何使用线程池？","slug":"如何使用线程池","link":"#如何使用线程池","children":[]}]},{"level":2,"title":"线程池最佳实践","slug":"线程池最佳实践","link":"#线程池最佳实践","children":[{"level":3,"title":"1. 使用 ThreadPoolExecutor 的构造函数声明线程池","slug":"_1-使用-threadpoolexecutor-的构造函数声明线程池","link":"#_1-使用-threadpoolexecutor-的构造函数声明线程池","children":[]},{"level":3,"title":"2.监测线程池运行状态","slug":"_2-监测线程池运行状态","link":"#_2-监测线程池运行状态","children":[]},{"level":3,"title":"3.建议不同类别的业务用不同的线程池","slug":"_3-建议不同类别的业务用不同的线程池","link":"#_3-建议不同类别的业务用不同的线程池","children":[]},{"level":3,"title":"4.别忘记给线程池命名","slug":"_4-别忘记给线程池命名","link":"#_4-别忘记给线程池命名","children":[]},{"level":3,"title":"5.正确配置线程池参数","slug":"_5-正确配置线程池参数","link":"#_5-正确配置线程池参数","children":[]}]}],"git":{"createdTime":1677148798000,"updatedTime":1677148798000,"contributors":[{"name":"xiaobai-myh123","email":"xiaobaix25@gamil.com","commits":1}]},"readingTime":{"minutes":14.91,"words":4472},"filePathRelative":"java/concurrent/java-thread-pool-best-practices.md","localizedDate":"2023年2月23日","excerpt":"<p>这篇文章篇幅虽短，但是绝对是干货。标题稍微有点夸张，嘿嘿，实际都是自己使用线程池的时候总结的一些个人感觉比较重要的点。</p>\\n<h2> 线程池知识回顾</h2>\\n<p>开始这篇文章之前还是简单介绍线程池，之前写的<a href=\\"/java/concurrent/java-thread-pool-summary.html\\" target=\\"blank\\">《新手也能看懂的线程池学习总结》</a>这篇文章介绍的很详细了。</p>\\n<h3> 为什么要使用线程池？</h3>\\n<blockquote>\\n<p><strong>池化技术想必大家已经屡见不鲜了，线程池、数据库连接池、Http 连接池等等都是对这个思想的应用。池化技术的思想主要是为了减少每次获取资源的消耗，提高对资源的利用率。</strong></p>\\n</blockquote>","copyright":{},"autoDesc":true}');export{e as data};
