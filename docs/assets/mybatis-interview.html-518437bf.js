const e=JSON.parse('{"key":"v-7da5cceb","path":"/system-design/framework/mybatis/mybatis-interview.html","title":"MyBatis常见面试题总结","lang":"zh-CN","frontmatter":{"title":"MyBatis常见面试题总结","category":["框架"],"icon":"database","tag":["MyBatis"],"head":[["meta",{"name":"keywords","content":"MyBatis"}],["meta",{"name":"description","content":"几道常见的 MyBatis 常见"}],["meta",{"property":"og:url","content":"https://javaguide.cn/system-design/framework/mybatis/mybatis-interview.html"}],["meta",{"property":"og:site_name","content":"JavaGuide(Java面试+学习指南)"}],["meta",{"property":"og:title","content":"MyBatis常见面试题总结"}],["meta",{"property":"og:description","content":"本篇文章由 JavaGuide 收集自网络，原出处不明。 #{} 和 ${} 的区别是什么？ 注：这道题是面试官面试我同事的。 答： ${}是 Properties 文件中的变量占位符，它可以用于标签属性值和 sql 内部，属于静态文本替换，比如${driver}会被静态替换为com.mysql.jdbc. Driver。 #{}是 sql 的参数占位符，MyBatis 会将 sql 中的#{}替换为? 号，在 sql 执行前会使用 PreparedStatement 的参数设置方法，按序给 sql 的? 号占位符设置参数值，比如 ps.setInt(0, parameterValue)，#{item.name} 的取值方式为使用反射从参数对象中获取 item 对象的 name 属性值，相当于 param.getItem().getName()。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"MyBatis"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MyBatis常见面试题总结\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"description":"本篇文章由 JavaGuide 收集自网络，原出处不明。 #{} 和 ${} 的区别是什么？ 注：这道题是面试官面试我同事的。 答： ${}是 Properties 文件中的变量占位符，它可以用于标签属性值和 sql 内部，属于静态文本替换，比如${driver}会被静态替换为com.mysql.jdbc. Driver。 #{}是 sql 的参数占位符，MyBatis 会将 sql 中的#{}替换为? 号，在 sql 执行前会使用 PreparedStatement 的参数设置方法，按序给 sql 的? 号占位符设置参数值，比如 ps.setInt(0, parameterValue)，#{item.name} 的取值方式为使用反射从参数对象中获取 item 对象的 name 属性值，相当于 param.getItem().getName()。"},"headers":[{"level":3,"title":"#{} 和 ${} 的区别是什么？","slug":"和-的区别是什么","link":"#和-的区别是什么","children":[]},{"level":3,"title":"xml 映射文件中，除了常见的 select、insert、update、delete 标签之外，还有哪些标签？","slug":"xml-映射文件中-除了常见的-select、insert、update、delete-标签之外-还有哪些标签","link":"#xml-映射文件中-除了常见的-select、insert、update、delete-标签之外-还有哪些标签","children":[]},{"level":3,"title":"Dao 接口的工作原理是什么？Dao 接口里的方法，参数不同时，方法能重载吗？","slug":"dao-接口的工作原理是什么-dao-接口里的方法-参数不同时-方法能重载吗","link":"#dao-接口的工作原理是什么-dao-接口里的方法-参数不同时-方法能重载吗","children":[]},{"level":3,"title":"MyBatis 是如何进行分页的？分页插件的原理是什么？","slug":"mybatis-是如何进行分页的-分页插件的原理是什么","link":"#mybatis-是如何进行分页的-分页插件的原理是什么","children":[]},{"level":3,"title":"简述 MyBatis 的插件运行原理，以及如何编写一个插件。","slug":"简述-mybatis-的插件运行原理-以及如何编写一个插件。","link":"#简述-mybatis-的插件运行原理-以及如何编写一个插件。","children":[]},{"level":3,"title":"MyBatis 执行批量插入，能返回数据库主键列表吗？","slug":"mybatis-执行批量插入-能返回数据库主键列表吗","link":"#mybatis-执行批量插入-能返回数据库主键列表吗","children":[]},{"level":3,"title":"MyBatis 动态 sql 是做什么的？都有哪些动态 sql？能简述一下动态 sql 的执行原理不？","slug":"mybatis-动态-sql-是做什么的-都有哪些动态-sql-能简述一下动态-sql-的执行原理不","link":"#mybatis-动态-sql-是做什么的-都有哪些动态-sql-能简述一下动态-sql-的执行原理不","children":[]},{"level":3,"title":"MyBatis 是如何将 sql 执行结果封装为目标对象并返回的？都有哪些映射形式？","slug":"mybatis-是如何将-sql-执行结果封装为目标对象并返回的-都有哪些映射形式","link":"#mybatis-是如何将-sql-执行结果封装为目标对象并返回的-都有哪些映射形式","children":[]},{"level":3,"title":"MyBatis 能执行一对一、一对多的关联查询吗？都有哪些实现方式，以及它们之间的区别。","slug":"mybatis-能执行一对一、一对多的关联查询吗-都有哪些实现方式-以及它们之间的区别。","link":"#mybatis-能执行一对一、一对多的关联查询吗-都有哪些实现方式-以及它们之间的区别。","children":[]},{"level":3,"title":"MyBatis 是否支持延迟加载？如果支持，它的实现原理是什么？","slug":"mybatis-是否支持延迟加载-如果支持-它的实现原理是什么","link":"#mybatis-是否支持延迟加载-如果支持-它的实现原理是什么","children":[]},{"level":3,"title":"MyBatis 的 xml 映射文件中，不同的 xml 映射文件，id 是否可以重复？","slug":"mybatis-的-xml-映射文件中-不同的-xml-映射文件-id-是否可以重复","link":"#mybatis-的-xml-映射文件中-不同的-xml-映射文件-id-是否可以重复","children":[]},{"level":3,"title":"MyBatis 中如何执行批处理？","slug":"mybatis-中如何执行批处理","link":"#mybatis-中如何执行批处理","children":[]},{"level":3,"title":"MyBatis 都有哪些 Executor 执行器？它们之间的区别是什么？","slug":"mybatis-都有哪些-executor-执行器-它们之间的区别是什么","link":"#mybatis-都有哪些-executor-执行器-它们之间的区别是什么","children":[]},{"level":3,"title":"MyBatis 中如何指定使用哪一种 Executor 执行器？","slug":"mybatis-中如何指定使用哪一种-executor-执行器","link":"#mybatis-中如何指定使用哪一种-executor-执行器","children":[]},{"level":3,"title":"MyBatis 是否可以映射 Enum 枚举类？","slug":"mybatis-是否可以映射-enum-枚举类","link":"#mybatis-是否可以映射-enum-枚举类","children":[]},{"level":3,"title":"MyBatis 映射文件中，如果 A 标签通过 include 引用了 B 标签的内容，请问，B 标签能否定义在 A 标签的后面，还是说必须定义在 A 标签的前面？","slug":"mybatis-映射文件中-如果-a-标签通过-include-引用了-b-标签的内容-请问-b-标签能否定义在-a-标签的后面-还是说必须定义在-a-标签的前面","link":"#mybatis-映射文件中-如果-a-标签通过-include-引用了-b-标签的内容-请问-b-标签能否定义在-a-标签的后面-还是说必须定义在-a-标签的前面","children":[]},{"level":3,"title":"简述 MyBatis 的 xml 映射文件和 MyBatis 内部数据结构之间的映射关系？","slug":"简述-mybatis-的-xml-映射文件和-mybatis-内部数据结构之间的映射关系","link":"#简述-mybatis-的-xml-映射文件和-mybatis-内部数据结构之间的映射关系","children":[]},{"level":3,"title":"为什么说 MyBatis 是半自动 ORM 映射工具？它与全自动的区别在哪里？","slug":"为什么说-mybatis-是半自动-orm-映射工具-它与全自动的区别在哪里","link":"#为什么说-mybatis-是半自动-orm-映射工具-它与全自动的区别在哪里","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":13.07,"words":3920},"filePathRelative":"system-design/framework/mybatis/mybatis-interview.md","excerpt":"<blockquote>\\n<p>本篇文章由 JavaGuide 收集自网络，原出处不明。</p>\\n</blockquote>\\n<h3> #{} 和 ${} 的区别是什么？</h3>\\n<p>注：这道题是面试官面试我同事的。</p>\\n<p>答：</p>\\n<ul>\\n<li><code>${}</code>是 Properties 文件中的变量占位符，它可以用于标签属性值和 sql 内部，属于静态文本替换，比如${driver}会被静态替换为<code>com.mysql.jdbc. Driver</code>。</li>\\n<li><code>#{}</code>是 sql 的参数占位符，MyBatis 会将 sql 中的<code>#{}</code>替换为? 号，在 sql 执行前会使用 PreparedStatement 的参数设置方法，按序给 sql 的? 号占位符设置参数值，比如 ps.setInt(0, parameterValue)，<code>#{item.name}</code> 的取值方式为使用反射从参数对象中获取 item 对象的 name 属性值，相当于 <code>param.getItem().getName()</code>。</li>\\n</ul>","copyright":{},"autoDesc":true}');export{e as data};
