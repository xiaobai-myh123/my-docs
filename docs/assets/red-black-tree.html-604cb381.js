import{_ as o,W as a,X as l,Y as t,Z as e,$ as r,a1 as s,F as c}from"./framework-b5ed7090.js";const i={},_=s('<h1 id="红黑树" tabindex="-1"><a class="header-anchor" href="#红黑树" aria-hidden="true">#</a> 红黑树</h1><p><strong>红黑树特点</strong> :</p><ol><li>每个节点非红即黑；</li><li>根节点总是黑色的；</li><li>每个叶子节点都是黑色的空节点（NIL节点）；</li><li>如果节点是红色的，则它的子节点必须是黑色的（反之不一定）；</li><li>从根节点到叶节点或空子节点的每条路径，必须包含相同数目的黑色节点（即相同的黑色高度）。</li></ol><p><strong>红黑树的应用</strong> ：TreeMap、TreeSet以及JDK1.8的HashMap底层都用到了红黑树。</p>',4),h=t("strong",null,"为什么要用红黑树？",-1),d={href:"https://juejin.im/post/5a27c6946fb9a04509096248#comment",target:"_blank",rel:"noopener noreferrer"},p=t("strong",null,"相关阅读",-1),f={href:"https://zhuanlan.zhihu.com/p/24367771",target:"_blank",rel:"noopener noreferrer"};function u(m,g){const n=c("ExternalLinkIcon");return a(),l("div",null,[_,t("p",null,[h,e(" 简单来说红黑树就是为了解决二叉查找树的缺陷，因为二叉查找树在某些情况下会退化成一个线性结构。详细了解可以查看 "),t("a",d,[e("漫画：什么是红黑树？"),r(n)]),e("（也介绍到了二叉查找树，非常推荐）")]),t("p",null,[p,e(" ："),t("a",f,[e("《红黑树深入剖析及Java实现》"),r(n)]),e("（美团点评技术团队）")])])}const x=o(i,[["render",u],["__file","red-black-tree.html.vue"]]);export{x as default};
