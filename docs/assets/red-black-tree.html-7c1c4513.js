const e=JSON.parse('{"key":"v-685b1198","path":"/cs-basics/data-structure/red-black-tree.html","title":"红黑树","lang":"zh-CN","frontmatter":{"category":["计算机基础"],"tag":["数据结构"],"description":"红黑树 红黑树特点 : 每个节点非红即黑； 根节点总是黑色的； 每个叶子节点都是黑色的空节点（NIL节点）； 如果节点是红色的，则它的子节点必须是黑色的（反之不一定）； 从根节点到叶节点或空子节点的每条路径，必须包含相同数目的黑色节点（即相同的黑色高度）。 红黑树的应用 ：TreeMap、TreeSet以及JDK1.8的HashMap底层都用到了红黑树。 为什么要用红黑树？ 简单来说红黑树就是为了解决二叉查找树的缺陷，因为二叉查找树在某些情况下会退化成一个线性结构。详细了解可以查看 漫画：什么是红黑树？（也介绍到了二叉查找树，非常推荐）","head":[["meta",{"property":"og:url","content":"https://javaguide.cn/cs-basics/data-structure/red-black-tree.html"}],["meta",{"property":"og:site_name","content":"JavaGuide(Java面试+学习指南)"}],["meta",{"property":"og:title","content":"红黑树"}],["meta",{"property":"og:description","content":"红黑树 红黑树特点 : 每个节点非红即黑； 根节点总是黑色的； 每个叶子节点都是黑色的空节点（NIL节点）； 如果节点是红色的，则它的子节点必须是黑色的（反之不一定）； 从根节点到叶节点或空子节点的每条路径，必须包含相同数目的黑色节点（即相同的黑色高度）。 红黑树的应用 ：TreeMap、TreeSet以及JDK1.8的HashMap底层都用到了红黑树。 为什么要用红黑树？ 简单来说红黑树就是为了解决二叉查找树的缺陷，因为二叉查找树在某些情况下会退化成一个线性结构。详细了解可以查看 漫画：什么是红黑树？（也介绍到了二叉查找树，非常推荐）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-23T10:39:58.000Z"}],["meta",{"property":"article:tag","content":"数据结构"}],["meta",{"property":"article:modified_time","content":"2023-02-23T10:39:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"红黑树\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-23T10:39:58.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1677148798000,"updatedTime":1677148798000,"contributors":[{"name":"xiaobai-myh123","email":"xiaobaix25@gamil.com","commits":1}]},"readingTime":{"minutes":0.86,"words":257},"filePathRelative":"cs-basics/data-structure/red-black-tree.md","localizedDate":"2023年2月23日","excerpt":"<h1> 红黑树</h1>\\n<p><strong>红黑树特点</strong> :</p>\\n<ol>\\n<li>每个节点非红即黑；</li>\\n<li>根节点总是黑色的；</li>\\n<li>每个叶子节点都是黑色的空节点（NIL节点）；</li>\\n<li>如果节点是红色的，则它的子节点必须是黑色的（反之不一定）；</li>\\n<li>从根节点到叶节点或空子节点的每条路径，必须包含相同数目的黑色节点（即相同的黑色高度）。</li>\\n</ol>\\n<p><strong>红黑树的应用</strong> ：TreeMap、TreeSet以及JDK1.8的HashMap底层都用到了红黑树。</p>\\n<p><strong>为什么要用红黑树？</strong> 简单来说红黑树就是为了解决二叉查找树的缺陷，因为二叉查找树在某些情况下会退化成一个线性结构。详细了解可以查看 <a href=\\"https://juejin.im/post/5a27c6946fb9a04509096248#comment\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">漫画：什么是红黑树？</a>（也介绍到了二叉查找树，非常推荐）</p>","copyright":{},"autoDesc":true}');export{e as data};
