const e=JSON.parse('{"key":"v-0ebc6330","path":"/cs-basics/algorithms/string-algorithm-problems.html","title":"几道常见的字符串算法题","lang":"zh-CN","frontmatter":{"title":"几道常见的字符串算法题","category":["计算机基础"],"tag":["算法"],"description":"作者：wwwxmu 原文地址:https://www.weiweiblog.cn/13string/ 1. KMP 算法 谈到字符串问题，不得不提的就是 KMP 算法，它是用来解决字符串查找的问题，可以在一个字符串（S）中查找一个子串（W）出现的位置。KMP 算法把字符匹配的时间复杂度缩小到 O(m+n) ,而空间复杂度也只有O(m)。因为“暴力搜索”的方法会反复回溯主串，导致效率低下，而KMP算法可以利用已经部分匹配这个有效信息，保持主串上的指针不回溯，通过修改子串的指针，让模式串尽量地移动到有效的位置。","head":[["meta",{"property":"og:url","content":"https://javaguide.cn/cs-basics/algorithms/string-algorithm-problems.html"}],["meta",{"property":"og:site_name","content":"JavaGuide(Java面试+学习指南)"}],["meta",{"property":"og:title","content":"几道常见的字符串算法题"}],["meta",{"property":"og:description","content":"作者：wwwxmu 原文地址:https://www.weiweiblog.cn/13string/ 1. KMP 算法 谈到字符串问题，不得不提的就是 KMP 算法，它是用来解决字符串查找的问题，可以在一个字符串（S）中查找一个子串（W）出现的位置。KMP 算法把字符匹配的时间复杂度缩小到 O(m+n) ,而空间复杂度也只有O(m)。因为“暴力搜索”的方法会反复回溯主串，导致效率低下，而KMP算法可以利用已经部分匹配这个有效信息，保持主串上的指针不回溯，通过修改子串的指针，让模式串尽量地移动到有效的位置。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-23T10:39:58.000Z"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:modified_time","content":"2023-02-23T10:39:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"几道常见的字符串算法题\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-23T10:39:58.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1. KMP 算法","slug":"_1-kmp-算法","link":"#_1-kmp-算法","children":[]},{"level":2,"title":"2. 替换空格","slug":"_2-替换空格","link":"#_2-替换空格","children":[]},{"level":2,"title":"3. 最长公共前缀","slug":"_3-最长公共前缀","link":"#_3-最长公共前缀","children":[]},{"level":2,"title":"4. 回文串","slug":"_4-回文串","link":"#_4-回文串","children":[{"level":3,"title":"4.1. 最长回文串","slug":"_4-1-最长回文串","link":"#_4-1-最长回文串","children":[]},{"level":3,"title":"4.2. 验证回文串","slug":"_4-2-验证回文串","link":"#_4-2-验证回文串","children":[]},{"level":3,"title":"4.3. 最长回文子串","slug":"_4-3-最长回文子串","link":"#_4-3-最长回文子串","children":[]},{"level":3,"title":"4.4. 最长回文子序列","slug":"_4-4-最长回文子序列","link":"#_4-4-最长回文子序列","children":[]}]},{"level":2,"title":"5. 括号匹配深度","slug":"_5-括号匹配深度","link":"#_5-括号匹配深度","children":[]},{"level":2,"title":"6. 把字符串转换成整数","slug":"_6-把字符串转换成整数","link":"#_6-把字符串转换成整数","children":[]}],"git":{"createdTime":1677148798000,"updatedTime":1677148798000,"contributors":[{"name":"xiaobai-myh123","email":"xiaobaix25@gamil.com","commits":1}]},"readingTime":{"minutes":9.46,"words":2837},"filePathRelative":"cs-basics/algorithms/string-algorithm-problems.md","localizedDate":"2023年2月23日","excerpt":"<blockquote>\\n<p>作者：wwwxmu</p>\\n<p>原文地址:https://www.weiweiblog.cn/13string/</p>\\n</blockquote>\\n<h2> 1. KMP 算法</h2>\\n<p>谈到字符串问题，不得不提的就是 KMP 算法，它是用来解决字符串查找的问题，可以在一个字符串（S）中查找一个子串（W）出现的位置。KMP 算法把字符匹配的时间复杂度缩小到 O(m+n) ,而空间复杂度也只有O(m)。因为“暴力搜索”的方法会反复回溯主串，导致效率低下，而KMP算法可以利用已经部分匹配这个有效信息，保持主串上的指针不回溯，通过修改子串的指针，让模式串尽量地移动到有效的位置。</p>","copyright":{},"autoDesc":true}');export{e as data};
